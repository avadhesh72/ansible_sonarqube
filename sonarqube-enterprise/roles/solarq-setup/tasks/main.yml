---

- name: "Overwrite SonarQube download url"
  set_fact:
    sonar_download_url: "{{ __sonar_download_url }}"
  when: sonar_download_url is not defined

- name: "Overwrite SonarQube plugin base url"
  set_fact:
    sonar_plugin_baseurl: "{{ __sonar_plugin_baseurl }}"
  when: sonar_plugin_baseurl is not defined

- name: "Overwrite SonarQube commercial plugin base url"
  set_fact:
    sonar_commercial_plugin_baseurl: "{{ __sonar_commercial_plugin_baseurl }}"
  when: sonar_commercial_plugin_baseurl is not defined

- name: "Check if SonarQube binary exists"
  stat:
    path: "{{ sonar_daemon_dir }}/sonar.sh"
  register: sonar_binary_stat

- block:
  - name: Get stat of /tmp/{{ __sonar_archive }}
    stat:
      path: "/tmp/{{ __sonar_archive }}"
    register: _archive_path

  - name: "Download SonarQube binaries"
    get_url:
      url: "{{ sonar_download_url }}"
      dest: "/tmp/{{ __sonar_archive }}"
    retries: 5
    delay: 10
    when: not _archive_path.stat.path.exists

  - name: Get stat of {{ sonar_install_directory }}
    stat:
      path: "{{ sonar_install_directory }}"
    register: _sonar_dir

  - name: "Expand SonarQube binaries"
    unarchive:
      src: "/tmp/{{ __sonar_archive }}"
      dest: "{{ sonar_install_directory }}"
      owner: "{{ sonar_user }}"
      group: "{{ sonar_group }}"
      copy: no
    when: not _sonar_dir.stat.path.exists
    
#  - name: "Remove SonarQube archive"
#    file:
#      path: "/tmp/{{ __sonar_archive }}"
#      state: absent

  - name: Check sonar service status
    command: systemctl is-active sonar
    register: _sonar_svc_status
    ignore_errors: true

  - name: "Stop service before upgrade"
    service:
      name: sonar
      state: stopped
    when: _sonar_svc_status.rc == 0
    notify: warn about post-upgrade steps

  when: not sonar_binary_stat.stat.exists

- name: "Ensure SonarQube as init script for service management"
  file:
    src: "{{ sonar_daemon_dir }}/sonar.sh"
    dest: /etc/init.d/sonar
    state: link
  when: "ansible_service_mgr != 'systemd'"

- name: "Copy SonarQube systemd unit file into place (for systemd systems)."
  template:
    src: sonar.service.j2
    dest: /etc/systemd/system/sonar.service
    owner: root
    group: root
    mode: 0755
  register: systemd_service
  when: "ansible_service_mgr == 'systemd'"

- name: Force systemd to reread configs
  systemd:
    daemon_reload: yes
  tags: skip_ansible_lint
  when: systemd_service is defined and systemd_service.changed

- name: "Ensure SonarQube is running and set to start on boot."
  service:
    name: sonar
    state: started
    enabled: yes

- name: "Ensure SonarQube files permissions"
  file:
    path: "{{ sonar_install_directory }}"
    state: directory
    recurse: yes
    owner: "{{ sonar_user }}"
    group: "{{ sonar_group }}"
    mode: "go-w"

- name: "Ensure SonarQube configuration"
  template:
    src: "sonar.properties.j2"
    dest: "{{ sonar_conf_dir }}/sonar.properties"
    owner: "{{ sonar_user }}"
    group: "{{ sonar_group }}"
    mode: "u=rw,g=,o="
    backup: yes
  #no_log: true
  notify: restart_sonarqube
